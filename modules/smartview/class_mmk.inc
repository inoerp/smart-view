<?php

 defined('LOWER_LIMIT') ? null : define('LOWER_LIMIT', -20);
 defined('UPPER_LIMIT') ? null : define('UPPER_LIMIT', 20);

 class mmk extends dbOraObject {

  public static $table_name = "supply_analysis";
  public static $primary_column = "supply_analysis_id";
  public $field_a = [
   'PLANNER_CODE',
   'ORGANIZATION_ID'
  ];
  public $initial_search = [
  ];
  public $column = [
   'PLANNER_CODE'
  ];
  public $supply_analysis_parameters = [
   'Organization' => 'search_org_name',
//   'Planner Code' => 'search_planner_code',
   'Item Number From' => 'search_item_number_from',
   'Item Number To' => 'search_item_number_to',
  ];
  public $supply_analysis_details = [
   'name' => 'Supply Analysis Report',
   'description' => 'Supply Analysis Report',
  ];
  public $supply_analysis_id;
  public $PLANNER_CODE;
  public $ORGANIZATION_ID;

  public function __set($name, $value) {
   switch ($value) {
    case $value:


     break;

    default:
     $this->$name = $value;
     break;
   }
  }

  public function supply_analysis($parameters = '') {
//   $pageno = !empty($parameters['pageno']) ? $parameters['pageno'] : 1;
//   $page_size = !empty($parameters['per_page']) ? $parameters['per_page'] : 10;
//   $whereClause = $_GET['whereClause'];
//   $search_order_by = !(empty($_GET['search_order_by'])) ? $_GET['search_order_by'] : '';
//   $search_asc_desc = !(empty($_GET['search_asc_desc'])) ? $_GET['search_asc_desc'] : '';

   $sql = " 
SELECT AL3.ORGANIZATION_CODE, AL2.SEGMENT1, AL2.DESCRIPTION, AL2.PRIMARY_UNIT_OF_MEASURE, AL1.MEANING, AL20.item_abc_assign1, AL20.item_abc_class, AL10.ITEM_COST, AL13.OPROD_TBU, AL13.OPROD_FAMILY, AL13.OPROD_LINE, AL13.OPROD_FORECAST_FIELD, AL2.PLANNER_CODE, AL4.FULL_NAME, AL11.VENDOR_NAME, AL12.VENDOR_SITE_CODE, AL5.MINIMUM_ORDER_QUANTITY, AL5.FIXED_LOT_MULTIPLIER, AL5.REPLENISHMENT_LEAD_TIME, AL2.POSTPROCESSING_LEAD_TIME, Decode (AL2.RECEIVING_ROUTING_ID,
1,'Standard',
2,'Inspection',
3,'Direct') as Receipt_Routing
, AL8.SUBINVENTORY_CODE, AL7.SUBINVENTORY_CODE, AL6.CONCATENATED_SEGMENTS, AL14.MIN_MINMAX_QUANTITY, AL5.SAFETY_STOCK_DAYS, AL5.NUMBER_OF_CARDS, AL5.KANBAN_SIZE, ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) /
( ( nvl(AL5.NUMBER_OF_CARDS,2) - 1 ) * 5 ) as Kanban_Frequency, 1, nvl(AL18.total_nettable_qoh,0) / nvl(AL5.KANBAN_SIZE,0.001), nvl(AL5.NUMBER_OF_CARDS,1) - 1, sum( AL17.supply_due_qty ) / nvl(AL5.KANBAN_SIZE,0.001), AL21.average_weekly_3, ( nvl(AL15.WEEKLY_GROSS_REQS_WEEK_0,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_1,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_2,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_3,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_4,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_5,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_6,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_7,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_8,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_9,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_10,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_11,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_12,0) ) / 13 as MRP_Planned_Weekly_Demand, trunc(( ( (  nvl(AL5.NUMBER_OF_CARDS,1) - 1 )  * nvl(AL5.KANBAN_SIZE,0.001) )  /  ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) * 5 ),0) as PS_Avg_Weekly_Demand, AL18.total_nettable_qoh, trunc(nvl(AL18.total_nettable_qoh,0) / 
( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 )         * nvl(AL5.KANBAN_SIZE,0.001) )  /  
        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 ),0) as Total_WOS
, case when
(
(
nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
nvl(AL18.total_nettable_qoh,0) / 
( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
)
< 0
)
then
0
else
(
nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
nvl(AL18.total_nettable_qoh,0) / 
( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
)
end as Order_Compression_Weeks, '.', AL17.supply_type, AL17.supply_due_qty, AL17.supply_due_week 
FROM APPLSYS.FND_LOOKUP_VALUES AL1, INV.MTL_SYSTEM_ITEMS_B AL2, INV.MTL_PARAMETERS AL3, APPS.PO_BUYERS_ALL_V AL4, 
APPS.MTL_KANBAN_PULL_SEQUENCES_V AL5, APPS.MTL_ITEM_LOCATIONS_KFV AL6, INV.MTL_ITEM_LOC_DEFAULTS AL7, 
INV.MTL_ITEM_SUB_DEFAULTS AL8, APPS.CST_ITEM_COST_TYPE_V AL10, APPS.PO_VENDORS AL11, 
APPS.PO_VENDOR_SITES_ALL AL12, APPSREAD.XXCOH_IM_CATEGORY_VIEW AL13, 
APPS.MTL_ITEM_SUB_INVENTORIES_ALL_V AL14, 
XXFACTS.XX_INVASCP_FACT AL15, (SELECT D15AL1.ORGANIZATION_ID AS organization_id, 
D15AL4.INVENTORY_ITEM_ID AS inventory_item_id, D15AL1.ORGANIZATION_CODE AS org, 
D15AL4.SEGMENT1 AS item_number, D15AL3.SEGMENT1 AS sr_operating_un4, D15AL3.SEGMENT2 AS sr_percentage, 
D15AL3.SEGMENT3 AS sr_vendor_id, D15AL3.SEGMENT4 AS sr_vendor_site_id, 
D15AL1.ORGANIZATION_ID AS organization_id2, D15AL4.INVENTORY_ITEM_ID AS inventory_item_id2, 
D15AL1.ORGANIZATION_CODE AS org2, D15AL4.SEGMENT1 AS item_number2, D15AL3.SEGMENT1 AS sr_operating_un12, 
D15AL3.SEGMENT2 AS sr_percentage2, D15AL3.SEGMENT3 AS sr_vendor_id2, D15AL3.SEGMENT4 AS sr_vendor_site_id2 
FROM INV.MTL_PARAMETERS D15AL1, INV.MTL_ITEM_CATEGORIES D15AL2, INV.MTL_CATEGORIES_B D15AL3, INV.MTL_SYSTEM_ITEMS_B D15AL4 
WHERE (D15AL2.CATEGORY_ID=D15AL3.CATEGORY_ID AND D15AL1.ORGANIZATION_ID=D15AL4.ORGANIZATION_ID 
AND D15AL4.ORGANIZATION_ID=D15AL2.ORGANIZATION_ID AND D15AL4.INVENTORY_ITEM_ID=D15AL2.INVENTORY_ITEM_ID ) 
AND ((D15AL1.ORGANIZATION_CODE IN ('BCO', 'EHC', 'GDP', 'GEP', 'IOS', 'KEP', 'LDP', 'MPT', 'NBT', 'PLM', 'PPG', 'SDD', 'SDP', 'SIO', 'SOF', 'SOP', 'SPG', 'SSC', 'SSD') 
AND D15AL2.CATEGORY_SET_ID=1100000242))) AL16, (SELECT D16AL1.ORGANIZATION_CODE AS org, 
D16AL2.SEGMENT1 AS item, 'PO' AS supply_type, D16AL5.QUANTITY - nvl(D16AL5.QUANTITY_CANCELLED,0) - nvl(D16AL5.QUANTITY_RECEIVED,0) - nvl(D16AL5.QUANTITY_SHIPPED,0) AS supply_due_qty, 
CEIL ( (  TRUNC ( D16AL5.PROMISED_DATE )    - TRUNC ( SYSDATE) )  / 7) AS supply_due_week, 
D16AL1.ORGANIZATION_ID AS organization_id, D16AL2.INVENTORY_ITEM_ID AS inventory_item_id 
FROM INV.MTL_PARAMETERS D16AL1, INV.MTL_SYSTEM_ITEMS_B D16AL2, PO.PO_LINES_ALL D16AL3,
PO.PO_HEADERS_ALL D16AL4, PO.PO_LINE_LOCATIONS_ALL D16AL5
WHERE (D16AL1.ORGANIZATION_ID=D16AL2.ORGANIZATION_ID AND D16AL2.INVENTORY_ITEM_ID=D16AL3.ITEM_ID 
AND D16AL3.PO_HEADER_ID=D16AL4.PO_HEADER_ID AND D16AL3.PO_LINE_ID=D16AL5.PO_LINE_ID 
AND D16AL2.ORGANIZATION_ID=D16AL5.SHIP_TO_ORGANIZATION_ID)  
AND ((D16AL1.ORGANIZATION_CODE='SPG' AND D16AL4.TYPE_LOOKUP_CODE='STANDARD' AND D16AL4.APPROVED_FLAG='Y' 
AND (D16AL4.CLOSED_CODE='OPEN' OR D16AL4.CLOSED_CODE IS NULL) AND (D16AL3.CLOSED_CODE='OPEN' OR D16AL3.CLOSED_CODE IS NULL) 
AND (D16AL5.QUANTITY - nvl(D16AL5.QUANTITY_CANCELLED,0) - nvl(D16AL5.QUANTITY_RECEIVED,0) - nvl(D16AL5.QUANTITY_SHIPPED,0)) > 0)) 
UNION ALL  SELECT D16AL11.ORGANIZATION_CODE, D16AL12.SEGMENT1, 'ISO', D16AL16.ORDERED_QUANTITY, CEIL ( (  TRUNC ( D16AL16.SCHEDULE_SHIP_DATE )    - TRUNC ( SYSDATE) )  / 7), D16AL11.ORGANIZATION_ID, D16AL12.INVENTORY_ITEM_ID
FROM INV.MTL_PARAMETERS D16AL11, INV.MTL_SYSTEM_ITEMS_B D16AL12, PO.PO_REQUISITION_LINES_ALL D16AL13, PO.PO_REQUISITION_HEADERS_ALL D16AL14, ONT.OE_ORDER_HEADERS_ALL D16AL15, ONT.OE_ORDER_LINES_ALL D16AL16 WHERE (D16AL11.ORGANIZATION_ID=D16AL12.ORGANIZATION_ID AND D16AL12.ORGANIZATION_ID=D16AL13.DESTINATION_ORGANIZATION_ID AND D16AL12.INVENTORY_ITEM_ID=D16AL13.ITEM_ID AND D16AL13.REQUISITION_HEADER_ID=D16AL14.REQUISITION_HEADER_ID AND D16AL14.SEGMENT1=D16AL15.ORIG_SYS_DOCUMENT_REF AND D16AL13.REQUISITION_LINE_ID=D16AL16.SOURCE_DOCUMENT_LINE_ID)  AND ((D16AL11.ORGANIZATION_CODE='SPG' AND D16AL15.ORDER_SOURCE_ID=10 AND D16AL15.FLOW_STATUS_CODE='BOOKED' AND D16AL16.FLOW_STATUS_CODE IN ('AWAITING_SHIPPING', 'BOOKED', 'SHIPPED'))) UNION ALL  SELECT D16AL17.ORGANIZATION_CODE, D16AL18.SEGMENT1, 'WO', D16AL19.START_QUANTITY - 
D16AL19.QUANTITY_SCRAPPED - 
D16AL19.QUANTITY_COMPLETED, CEIL ( (  TRUNC ( D16AL19.SCHEDULED_COMPLETION_DATE )    - TRUNC ( SYSDATE) )  / 7), D16AL17.ORGANIZATION_ID, D16AL18.INVENTORY_ITEM_ID FROM INV.MTL_PARAMETERS D16AL17, INV.MTL_SYSTEM_ITEMS_B D16AL18, WIP.WIP_DISCRETE_JOBS D16AL19, APPS.MFG_LOOKUPS D16AL22, APPS.MFG_LOOKUPS D16AL23 WHERE (D16AL17.ORGANIZATION_ID=D16AL18.ORGANIZATION_ID AND D16AL18.ORGANIZATION_ID=D16AL19.ORGANIZATION_ID AND D16AL18.INVENTORY_ITEM_ID=D16AL19.PRIMARY_ITEM_ID AND D16AL19.JOB_TYPE=D16AL22.LOOKUP_CODE AND D16AL19.STATUS_TYPE=D16AL23.LOOKUP_CODE)  AND ((D16AL17.ORGANIZATION_CODE='SPG' AND D16AL23.MEANING='Released' AND D16AL22.LOOKUP_TYPE='WIP_CLASS_TYPE' AND D16AL23.LOOKUP_TYPE='WIP_JOB_STATUS' AND ( D16AL19.START_QUANTITY - 
D16AL19.QUANTITY_SCRAPPED - 
D16AL19.QUANTITY_COMPLETED ) > 0)) UNION ALL  SELECT D16AL25.ORGANIZATION_CODE, D16AL24.SEGMENT1, 'BPO Release', D16AL28.QUANTITY - 
nvl(D16AL28.QUANTITY_CANCELLED,0) - 
nvl(D16AL28.QUANTITY_RECEIVED,0) - 
nvl(D16AL28.QUANTITY_SHIPPED,0), CEIL ( (  TRUNC ( D16AL28.PROMISED_DATE )    - TRUNC ( SYSDATE) )  / 7), D16AL25.ORGANIZATION_ID, D16AL24.INVENTORY_ITEM_ID FROM INV.MTL_SYSTEM_ITEMS_B D16AL24, INV.MTL_PARAMETERS D16AL25, APPSREAD.PO_HEADERS_ALL D16AL26, PO.PO_LINES_ALL D16AL27, PO.PO_LINE_LOCATIONS_ALL D16AL28 WHERE (D16AL25.ORGANIZATION_ID=D16AL24.ORGANIZATION_ID AND D16AL24.INVENTORY_ITEM_ID=D16AL27.ITEM_ID AND D16AL27.PO_HEADER_ID=D16AL26.PO_HEADER_ID AND D16AL24.ORGANIZATION_ID=D16AL28.SHIP_TO_ORGANIZATION_ID AND D16AL27.PO_LINE_ID=D16AL28.PO_LINE_ID)  AND ((D16AL25.ORGANIZATION_CODE='SPG' AND D16AL26.TYPE_LOOKUP_CODE='BLANKET' AND D16AL26.APPROVED_FLAG='Y' AND (D16AL26.CLOSED_CODE='OPEN' OR D16AL26.CLOSED_CODE IS NULL) AND (D16AL27.CLOSED_CODE='OPEN' OR D16AL27.CLOSED_CODE IS NULL) AND (D16AL28.QUANTITY - nvl(D16AL28.QUANTITY_CANCELLED,0) - nvl(D16AL28.QUANTITY_RECEIVED,0) - nvl(D16AL28.QUANTITY_SHIPPED,0) ) > 0))) AL17, (SELECT D17AL2.ORGANIZATION_CODE AS org, D17AL1.SEGMENT1 AS item, SUM ( D17AL3.ON_HAND ) AS total_nettable_qoh, D17AL2.ORGANIZATION_ID AS organization_id, D17AL1.INVENTORY_ITEM_ID AS inventory_item_id FROM INV.MTL_SYSTEM_ITEMS_B D17AL1, INV.MTL_PARAMETERS D17AL2, APPS.MTL_ONHAND_TOTAL_V D17AL3, APPS.MTL_SECONDARY_INVENTORIES_FK_V D17AL4 WHERE ( D17AL1.ORGANIZATION_ID = D17AL3.ORGANIZATION_ID (+) AND  D17AL1.INVENTORY_ITEM_ID = D17AL3.INVENTORY_ITEM_ID (+) AND D17AL2.ORGANIZATION_ID=D17AL1.ORGANIZATION_ID AND D17AL3.ORGANIZATION_ID=D17AL4.ORGANIZATION_ID AND D17AL3.SUBINVENTORY_CODE=D17AL4.SECONDARY_INVENTORY_NAME)  AND ((D17AL2.ORGANIZATION_CODE='SPG' AND D17AL4.AVAILABILITY_TYPE=1)) GROUP BY D17AL2.ORGANIZATION_CODE, D17AL1.SEGMENT1, D17AL2.ORGANIZATION_ID, D17AL1.INVENTORY_ITEM_ID) AL18, (SELECT D19AL1.ORGANIZATION_CODE AS org, D19AL3.ASSIGNMENT_GROUP_NAME AS item_abc_assign1, D19AL4.ABC_CLASS_NAME AS item_abc_class, D19AL3.ORGANIZATION_ID AS organization_id, D19AL3.INVENTORY_ITEM_ID AS inventory_item_id FROM INV.MTL_PARAMETERS D19AL1, MRP.MRP_PARAMETERS D19AL2, APPS.MTL_ABC_ASSIGNMENTS_V D19AL3, APPS.MTL_ABC_CLASSES_ALL_V D19AL4 WHERE (D19AL1.ORGANIZATION_ID=D19AL2.ORGANIZATION_ID AND D19AL2.ORGANIZATION_ID=D19AL3.ORGANIZATION_ID AND D19AL2.DEFAULT_ABC_ASSIGNMENT_GROUP=D19AL3.ASSIGNMENT_GROUP_ID AND D19AL3.ORGANIZATION_ID=D19AL4.ORGANIZATION_ID AND D19AL3.ABC_CLASS_ID=D19AL4.ABC_CLASS_ID)  AND (D19AL1.ORGANIZATION_CODE='SPG')) AL20, (SELECT D20AL1.ORGANIZATION_CODE AS org, D20AL3.SEGMENT1 AS item, -1 * SUM ( D20AL4.TRANSACTION_QUANTITY ) AS total_usage, -5 * SUM ( nvl(D20AL4.TRANSACTION_QUANTITY,0) ) / 91 AS average_weekly_3, D20AL4.ORGANIZATION_ID AS organization_id, D20AL4.INVENTORY_ITEM_ID AS inventory_item_id FROM INV.MTL_PARAMETERS D20AL1, INV.MTL_TRANSACTION_TYPES D20AL2, INV.MTL_SYSTEM_ITEMS_B D20AL3, INV.MTL_MATERIAL_TRANSACTIONS D20AL4 WHERE (D20AL1.ORGANIZATION_ID=D20AL4.ORGANIZATION_ID AND D20AL4.ORGANIZATION_ID=D20AL3.ORGANIZATION_ID AND D20AL4.INVENTORY_ITEM_ID=D20AL3.INVENTORY_ITEM_ID AND D20AL4.TRANSACTION_TYPE_ID=D20AL2.TRANSACTION_TYPE_ID)  AND ((D20AL1.ORGANIZATION_CODE='SPG' AND D20AL2.TRANSACTION_TYPE_NAME IN ('Internal order issue', 'Logical Intercompany Sales Issue', 'Logical Sales Order Issue', 'Sales order issue', 'WIP Issue', 'WIP Negative Issue', 'WIP Negative Return', 'WIP Return') AND D20AL4.TRANSACTION_DATE > (SYSDATE - 91))) GROUP BY D20AL1.ORGANIZATION_CODE, D20AL3.SEGMENT1, D20AL4.ORGANIZATION_ID, D20AL4.INVENTORY_ITEM_ID) AL21 WHERE ( AL2.BUYER_ID = AL4.EMPLOYEE_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL8.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL8.ORGANIZATION_ID (+) AND  AL7.LOCATOR_ID = AL6.INVENTORY_LOCATION_ID (+) AND  AL7.ORGANIZATION_ID = AL6.ORGANIZATION_ID (+) AND  AL2.ORGANIZATION_ID = AL10.ORGANIZATION_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL10.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL13.ORGANIZATION_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL13.INVENTORY_ITEM_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL7.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL7.ORGANIZATION_ID (+) AND  AL5.INVENTORY_ITEM_ID = AL14.INVENTORY_ITEM_ID (+) AND  AL5.ORGANIZATION_ID = AL14.ORGANIZATION_ID (+) AND  AL5.SUBINVENTORY_NAME = AL14.SECONDARY_INVENTORY (+) AND  AL2.INVENTORY_ITEM_ID = AL15.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL15.ORGANIZATION_ID (+) AND  AL2.ORGANIZATION_ID = AL16.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL16.inventory_item_id (+) AND  AL16.sr_vendor_id = AL11.VENDOR_ID (+) AND  AL16.sr_vendor_site_id = AL12.VENDOR_SITE_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL17.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL17.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL18.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL18.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL20.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL20.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL21.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL21.organization_id (+) AND AL3.ORGANIZATION_ID=AL2.ORGANIZATION_ID AND AL2.ITEM_TYPE=AL1.LOOKUP_CODE AND AL2.ORGANIZATION_ID=AL5.ORGANIZATION_ID AND AL2.INVENTORY_ITEM_ID=AL5.INVENTORY_ITEM_ID)  AND ((AL3.ORGANIZATION_CODE='SPG' AND AL5.SOURCE_TYPE IN (1, 2) AND AL1.LOOKUP_TYPE='ITEM_TYPE' AND AL1.LANGUAGE='US' AND AL8.DEFAULT_TYPE(+)=2 AND AL7.DEFAULT_TYPE(+)=2 AND AL5.KANBAN_PLAN_ID=-1 AND AL10.COST_TYPE(+)='Frozen' AND AL15.DATE_RUN > (SYSDATE - 6))) GROUP BY AL3.ORGANIZATION_CODE, AL2.SEGMENT1, AL2.DESCRIPTION, AL2.PRIMARY_UNIT_OF_MEASURE, AL1.MEANING, AL20.item_abc_assign1, AL20.item_abc_class, AL10.ITEM_COST, AL13.OPROD_TBU, AL13.OPROD_FAMILY, AL13.OPROD_LINE, AL13.OPROD_FORECAST_FIELD, AL2.PLANNER_CODE, AL4.FULL_NAME, AL11.VENDOR_NAME, AL12.VENDOR_SITE_CODE, AL5.MINIMUM_ORDER_QUANTITY, AL5.FIXED_LOT_MULTIPLIER, AL5.REPLENISHMENT_LEAD_TIME, AL2.POSTPROCESSING_LEAD_TIME, Decode (AL2.RECEIVING_ROUTING_ID,
1,'Standard',
2,'Inspection',
3,'Direct')
, AL8.SUBINVENTORY_CODE, AL7.SUBINVENTORY_CODE, AL6.CONCATENATED_SEGMENTS, AL14.MIN_MINMAX_QUANTITY, AL5.SAFETY_STOCK_DAYS, AL5.NUMBER_OF_CARDS, AL5.KANBAN_SIZE, ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) /
( ( nvl(AL5.NUMBER_OF_CARDS,2) - 1 ) * 5 ), 1, nvl(AL18.total_nettable_qoh,0) / nvl(AL5.KANBAN_SIZE,0.001), nvl(AL5.NUMBER_OF_CARDS,1) - 1, AL21.average_weekly_3, ( nvl(AL15.WEEKLY_GROSS_REQS_WEEK_0,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_1,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_2,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_3,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_4,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_5,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_6,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_7,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_8,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_9,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_10,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_11,0) + 
nvl(AL15.WEEKLY_GROSS_REQS_WEEK_12,0) ) / 13, trunc(( ( (  nvl(AL5.NUMBER_OF_CARDS,1) - 1 )  * nvl(AL5.KANBAN_SIZE,0.001) )  /  ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) * 5 ),0), AL18.total_nettable_qoh, trunc(nvl(AL18.total_nettable_qoh,0) / 
( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 )         * nvl(AL5.KANBAN_SIZE,0.001) )  /  
        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 ),0)
, case when
(
(
nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
nvl(AL18.total_nettable_qoh,0) / 
( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
)
< 0
)
then
0
else
(
nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
nvl(AL18.total_nettable_qoh,0) / 
( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
)
end, '.', AL17.supply_type, AL17.supply_due_qty, AL17.supply_due_week ORDER BY  1,  38,  2

";
   $bdOra = new dbOraObject();
   $result = $bdOra->findBySql($sql);
//   pa($result);
   $pivoted_data = [];
  
   $used_items = [];
   $this_row = new stdClass();
   $header_row = new stdClass();
   foreach ($result[0] as $key => $value) {
    $this_row->$key = ucwords(strtolower(str_replace('_', ' ', $key)));
    $header_row->$key = null;
   }
   $this_row->buyer_action = 'Buyer Action';
   $header_row->supply_due_week = 'Supply Due Week';
   for ($j = LOWER_LIMIT; $j <= UPPER_LIMIT; $j++) {
    $this_row->$j = null;
    $week_no = 'Week'.$j;
    $header_row->$week_no = 'Week '.$j;
   }
   $pivoted_data['HEADER_ROW'] = $header_row;
   $pivoted_data['SECOND_HEADER_ROW'] = $this_row;

   foreach ($result as $row_obj) {
    $buyer_action = '';
    $row = (array) $row_obj;
    $this_row = new stdClass();
    if (!in_array($row_obj->SEGMENT1, $used_items)) {
     array_push($used_items, $row_obj->SEGMENT1);
     $total_elements = count($row);

     foreach ($row_obj as $key => $val) {
      $this_row->$key = $val;
     }

     if (($row_obj->SUPPLY_DUE_WEEK < 0)&& !empty($row_obj->SUPPLY_DUE_QTY) ) {
      $buyer_action .= ' Update Need By Date ';
     } else if ($row_obj->SUPPLY_DUE_WEEK > UPPER_LIMIT) {
      $buyer_action .= ' Supply beyond the horizon ';
     }

     if (($row_obj->ORDER_COMPRESSION_WEEKS > 0) && (!empty($row_obj->SUPPLY_DUE_QTY))) {
      $buyer_action .= empty($buyer_action) ? ' Reschedule In ' : ', Reschedule In ';
     }

     if (empty($row_obj->MRP_PLANNED_WEEKLY_DEMAND) && !empty($row_obj->SUPPLY_DUE_QTY)) {
      $buyer_action .= empty($buyer_action) ? ' Cancel Order ' : ', Cancel Order ';
     }

          if (($row_obj->SUPPLY_DUE_WEEK) < ($row_obj->TOTAL_WOS)  && !empty($row_obj->SUPPLY_DUE_QTY)) {
      $buyer_action .= empty($buyer_action) ? ' Reschedule Out ' : ', Reschedule Out ';
     }
     $this_row->buyer_action = $buyer_action;
     for ($i = LOWER_LIMIT; $i <= UPPER_LIMIT; $i++) {
      if ($row_obj->SUPPLY_DUE_WEEK <= LOWER_LIMIT) {
       $this_row->LOWER_LIMIT = $row_obj->SUPPLY_DUE_QTY;
      } else if ($row_obj->SUPPLY_DUE_WEEK >= UPPER_LIMIT) {
       $this_row->UPPER_LIMIT = $row_obj->SUPPLY_DUE_QTY;
      } elseif (($row_obj->SUPPLY_DUE_WEEK == $i) || (empty($row_obj->SUPPLY_DUE_WEEK) && empty($i))) {
       $this_row->$i = $row_obj->SUPPLY_DUE_QTY;
      } else {
       $this_row->$i = null;
      }
     }
     $pivoted_data[$row_obj->SEGMENT1] = $this_row;
    } else {
     $existing_data = $pivoted_data[$row_obj->SEGMENT1];
     $total_elements = count($row);
     foreach ($existing_data as $key => $val) {
      $this_row->$key = $val;
     }

     for ($i = LOWER_LIMIT; $i <= UPPER_LIMIT; $i++) {
      if ($row_obj->SUPPLY_DUE_WEEK <= LOWER_LIMIT) {
       $this_row->LOWER_LIMIT = $row_obj->SUPPLY_DUE_QTY;
      } else if ($row_obj->SUPPLY_DUE_WEEK >= UPPER_LIMIT) {
       $this_row->UPPER_LIMIT = $row_obj->SUPPLY_DUE_QTY;
      } elseif (($row_obj->SUPPLY_DUE_WEEK == $i) || (empty($row_obj->SUPPLY_DUE_WEEK) && empty($i))) {
       $this_row->$i = $row_obj->SUPPLY_DUE_QTY;
      }
     }
     $pivoted_data[$row_obj->SEGMENT1] = $this_row;
    }
    unset($buyer_action);
   }

   return !empty($pivoted_data) ? $pivoted_data : false;
  }

//  public function search_counts($sql = '') {
//   $whereClause = $_GET['whereClause'];
//
//   
//   $sql = " 
//SELECT AL3.ORGANIZATION_CODE, AL2.SEGMENT1, AL2.DESCRIPTION, AL2.PRIMARY_UNIT_OF_MEASURE, AL1.MEANING, AL20.item_abc_assign1, AL20.item_abc_class, AL10.ITEM_COST, AL13.OPROD_TBU, AL13.OPROD_FAMILY, AL13.OPROD_LINE, AL13.OPROD_FORECAST_FIELD, AL2.PLANNER_CODE, AL4.FULL_NAME, AL11.VENDOR_NAME, AL12.VENDOR_SITE_CODE, AL5.MINIMUM_ORDER_QUANTITY, AL5.FIXED_LOT_MULTIPLIER, AL5.REPLENISHMENT_LEAD_TIME, AL2.POSTPROCESSING_LEAD_TIME, Decode (AL2.RECEIVING_ROUTING_ID,
//1,'Standard',
//2,'Inspection',
//3,'Direct') as Receipt_Routing
//, AL8.SUBINVENTORY_CODE, AL7.SUBINVENTORY_CODE, AL6.CONCATENATED_SEGMENTS, AL14.MIN_MINMAX_QUANTITY, AL5.SAFETY_STOCK_DAYS, AL5.NUMBER_OF_CARDS, AL5.KANBAN_SIZE, ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) /
//( ( nvl(AL5.NUMBER_OF_CARDS,2) - 1 ) * 5 ) as Kanban_Frequency, 1, nvl(AL18.total_nettable_qoh,0) / nvl(AL5.KANBAN_SIZE,0.001), nvl(AL5.NUMBER_OF_CARDS,1) - 1, sum( AL17.supply_due_qty ) / nvl(AL5.KANBAN_SIZE,0.001), AL21.average_weekly_3, ( nvl(AL15.WEEKLY_GROSS_REQS_WEEK_0,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_1,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_2,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_3,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_4,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_5,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_6,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_7,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_8,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_9,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_10,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_11,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_12,0) ) / 13 as MRP_Planned_Weekly_Demand, trunc(( ( (  nvl(AL5.NUMBER_OF_CARDS,1) - 1 )  * nvl(AL5.KANBAN_SIZE,0.001) )  /  ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) * 5 ),0) as PS_Avg_Weekly_Demand, AL18.total_nettable_qoh, trunc(nvl(AL18.total_nettable_qoh,0) / 
//( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 )         * nvl(AL5.KANBAN_SIZE,0.001) )  /  
//        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 ),0) as Total_WOS
//, case when
//(
//(
//nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
//nvl(AL18.total_nettable_qoh,0) / 
//( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
//        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
//)
//< 0
//)
//then
//0
//else
//(
//nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
//nvl(AL18.total_nettable_qoh,0) / 
//( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
//        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
//)
//end as Order_Compression_Weeks, '.', AL17.supply_type, AL17.supply_due_qty, AL17.supply_due_week 
//FROM APPLSYS.FND_LOOKUP_VALUES AL1, INV.MTL_SYSTEM_ITEMS_B AL2, INV.MTL_PARAMETERS AL3, APPS.PO_BUYERS_ALL_V AL4, 
//APPS.MTL_KANBAN_PULL_SEQUENCES_V AL5, APPS.MTL_ITEM_LOCATIONS_KFV AL6, INV.MTL_ITEM_LOC_DEFAULTS AL7, 
//INV.MTL_ITEM_SUB_DEFAULTS AL8, APPS.CST_ITEM_COST_TYPE_V AL10, APPS.PO_VENDORS AL11, 
//APPS.PO_VENDOR_SITES_ALL AL12, APPSREAD.XXCOH_IM_CATEGORY_VIEW AL13, 
//APPS.MTL_ITEM_SUB_INVENTORIES_ALL_V AL14, 
//XXFACTS.XX_INVASCP_FACT AL15, (SELECT D15AL1.ORGANIZATION_ID AS organization_id, 
//D15AL4.INVENTORY_ITEM_ID AS inventory_item_id, D15AL1.ORGANIZATION_CODE AS org, 
//D15AL4.SEGMENT1 AS item_number, D15AL3.SEGMENT1 AS sr_operating_un4, D15AL3.SEGMENT2 AS sr_percentage, 
//D15AL3.SEGMENT3 AS sr_vendor_id, D15AL3.SEGMENT4 AS sr_vendor_site_id, 
//D15AL1.ORGANIZATION_ID AS organization_id2, D15AL4.INVENTORY_ITEM_ID AS inventory_item_id2, 
//D15AL1.ORGANIZATION_CODE AS org2, D15AL4.SEGMENT1 AS item_number2, D15AL3.SEGMENT1 AS sr_operating_un12, 
//D15AL3.SEGMENT2 AS sr_percentage2, D15AL3.SEGMENT3 AS sr_vendor_id2, D15AL3.SEGMENT4 AS sr_vendor_site_id2 
//FROM INV.MTL_PARAMETERS D15AL1, INV.MTL_ITEM_CATEGORIES D15AL2, INV.MTL_CATEGORIES_B D15AL3, INV.MTL_SYSTEM_ITEMS_B D15AL4 
//WHERE (D15AL2.CATEGORY_ID=D15AL3.CATEGORY_ID AND D15AL1.ORGANIZATION_ID=D15AL4.ORGANIZATION_ID 
//AND D15AL4.ORGANIZATION_ID=D15AL2.ORGANIZATION_ID AND D15AL4.INVENTORY_ITEM_ID=D15AL2.INVENTORY_ITEM_ID ) 
//AND ((D15AL1.ORGANIZATION_CODE IN ('BCO', 'EHC', 'GDP', 'GEP', 'IOS', 'KEP', 'LDP', 'MPT', 'NBT', 'PLM', 'PPG', 'SDD', 'SDP', 'SIO', 'SOF', 'SOP', 'SPG', 'SSC', 'SSD') 
//AND D15AL2.CATEGORY_SET_ID=1100000242))) AL16, (SELECT D16AL1.ORGANIZATION_CODE AS org, 
//D16AL2.SEGMENT1 AS item, 'PO' AS supply_type, D16AL5.QUANTITY - nvl(D16AL5.QUANTITY_CANCELLED,0) - nvl(D16AL5.QUANTITY_RECEIVED,0) - nvl(D16AL5.QUANTITY_SHIPPED,0) AS supply_due_qty, 
//CEIL ( (  TRUNC ( D16AL5.PROMISED_DATE )    - TRUNC ( SYSDATE) )  / 7) AS supply_due_week, 
//D16AL1.ORGANIZATION_ID AS organization_id, D16AL2.INVENTORY_ITEM_ID AS inventory_item_id 
//FROM INV.MTL_PARAMETERS D16AL1, INV.MTL_SYSTEM_ITEMS_B D16AL2, PO.PO_LINES_ALL D16AL3,
//PO.PO_HEADERS_ALL D16AL4, PO.PO_LINE_LOCATIONS_ALL D16AL5
//WHERE (D16AL1.ORGANIZATION_ID=D16AL2.ORGANIZATION_ID AND D16AL2.INVENTORY_ITEM_ID=D16AL3.ITEM_ID 
//AND D16AL3.PO_HEADER_ID=D16AL4.PO_HEADER_ID AND D16AL3.PO_LINE_ID=D16AL5.PO_LINE_ID 
//AND D16AL2.ORGANIZATION_ID=D16AL5.SHIP_TO_ORGANIZATION_ID)  
//AND ((D16AL1.ORGANIZATION_CODE='SPG' AND D16AL4.TYPE_LOOKUP_CODE='STANDARD' AND D16AL4.APPROVED_FLAG='Y' 
//AND (D16AL4.CLOSED_CODE='OPEN' OR D16AL4.CLOSED_CODE IS NULL) AND (D16AL3.CLOSED_CODE='OPEN' OR D16AL3.CLOSED_CODE IS NULL) 
//AND (D16AL5.QUANTITY - nvl(D16AL5.QUANTITY_CANCELLED,0) - nvl(D16AL5.QUANTITY_RECEIVED,0) - nvl(D16AL5.QUANTITY_SHIPPED,0)) > 0)) 
//UNION ALL  SELECT D16AL11.ORGANIZATION_CODE, D16AL12.SEGMENT1, 'ISO', D16AL16.ORDERED_QUANTITY, CEIL ( (  TRUNC ( D16AL16.SCHEDULE_SHIP_DATE )    - TRUNC ( SYSDATE) )  / 7), D16AL11.ORGANIZATION_ID, D16AL12.INVENTORY_ITEM_ID
//FROM INV.MTL_PARAMETERS D16AL11, INV.MTL_SYSTEM_ITEMS_B D16AL12, PO.PO_REQUISITION_LINES_ALL D16AL13, PO.PO_REQUISITION_HEADERS_ALL D16AL14, ONT.OE_ORDER_HEADERS_ALL D16AL15, ONT.OE_ORDER_LINES_ALL D16AL16 WHERE (D16AL11.ORGANIZATION_ID=D16AL12.ORGANIZATION_ID AND D16AL12.ORGANIZATION_ID=D16AL13.DESTINATION_ORGANIZATION_ID AND D16AL12.INVENTORY_ITEM_ID=D16AL13.ITEM_ID AND D16AL13.REQUISITION_HEADER_ID=D16AL14.REQUISITION_HEADER_ID AND D16AL14.SEGMENT1=D16AL15.ORIG_SYS_DOCUMENT_REF AND D16AL13.REQUISITION_LINE_ID=D16AL16.SOURCE_DOCUMENT_LINE_ID)  AND ((D16AL11.ORGANIZATION_CODE='SPG' AND D16AL15.ORDER_SOURCE_ID=10 AND D16AL15.FLOW_STATUS_CODE='BOOKED' AND D16AL16.FLOW_STATUS_CODE IN ('AWAITING_SHIPPING', 'BOOKED', 'SHIPPED'))) UNION ALL  SELECT D16AL17.ORGANIZATION_CODE, D16AL18.SEGMENT1, 'WO', D16AL19.START_QUANTITY - 
//D16AL19.QUANTITY_SCRAPPED - 
//D16AL19.QUANTITY_COMPLETED, CEIL ( (  TRUNC ( D16AL19.SCHEDULED_COMPLETION_DATE )    - TRUNC ( SYSDATE) )  / 7), D16AL17.ORGANIZATION_ID, D16AL18.INVENTORY_ITEM_ID FROM INV.MTL_PARAMETERS D16AL17, INV.MTL_SYSTEM_ITEMS_B D16AL18, WIP.WIP_DISCRETE_JOBS D16AL19, APPS.MFG_LOOKUPS D16AL22, APPS.MFG_LOOKUPS D16AL23 WHERE (D16AL17.ORGANIZATION_ID=D16AL18.ORGANIZATION_ID AND D16AL18.ORGANIZATION_ID=D16AL19.ORGANIZATION_ID AND D16AL18.INVENTORY_ITEM_ID=D16AL19.PRIMARY_ITEM_ID AND D16AL19.JOB_TYPE=D16AL22.LOOKUP_CODE AND D16AL19.STATUS_TYPE=D16AL23.LOOKUP_CODE)  AND ((D16AL17.ORGANIZATION_CODE='SPG' AND D16AL23.MEANING='Released' AND D16AL22.LOOKUP_TYPE='WIP_CLASS_TYPE' AND D16AL23.LOOKUP_TYPE='WIP_JOB_STATUS' AND ( D16AL19.START_QUANTITY - 
//D16AL19.QUANTITY_SCRAPPED - 
//D16AL19.QUANTITY_COMPLETED ) > 0)) UNION ALL  SELECT D16AL25.ORGANIZATION_CODE, D16AL24.SEGMENT1, 'BPO Release', D16AL28.QUANTITY - 
//nvl(D16AL28.QUANTITY_CANCELLED,0) - 
//nvl(D16AL28.QUANTITY_RECEIVED,0) - 
//nvl(D16AL28.QUANTITY_SHIPPED,0), CEIL ( (  TRUNC ( D16AL28.PROMISED_DATE )    - TRUNC ( SYSDATE) )  / 7), D16AL25.ORGANIZATION_ID, D16AL24.INVENTORY_ITEM_ID FROM INV.MTL_SYSTEM_ITEMS_B D16AL24, INV.MTL_PARAMETERS D16AL25, APPSREAD.PO_HEADERS_ALL D16AL26, PO.PO_LINES_ALL D16AL27, PO.PO_LINE_LOCATIONS_ALL D16AL28 WHERE (D16AL25.ORGANIZATION_ID=D16AL24.ORGANIZATION_ID AND D16AL24.INVENTORY_ITEM_ID=D16AL27.ITEM_ID AND D16AL27.PO_HEADER_ID=D16AL26.PO_HEADER_ID AND D16AL24.ORGANIZATION_ID=D16AL28.SHIP_TO_ORGANIZATION_ID AND D16AL27.PO_LINE_ID=D16AL28.PO_LINE_ID)  AND ((D16AL25.ORGANIZATION_CODE='SPG' AND D16AL26.TYPE_LOOKUP_CODE='BLANKET' AND D16AL26.APPROVED_FLAG='Y' AND (D16AL26.CLOSED_CODE='OPEN' OR D16AL26.CLOSED_CODE IS NULL) AND (D16AL27.CLOSED_CODE='OPEN' OR D16AL27.CLOSED_CODE IS NULL) AND (D16AL28.QUANTITY - nvl(D16AL28.QUANTITY_CANCELLED,0) - nvl(D16AL28.QUANTITY_RECEIVED,0) - nvl(D16AL28.QUANTITY_SHIPPED,0) ) > 0))) AL17, (SELECT D17AL2.ORGANIZATION_CODE AS org, D17AL1.SEGMENT1 AS item, SUM ( D17AL3.ON_HAND ) AS total_nettable_qoh, D17AL2.ORGANIZATION_ID AS organization_id, D17AL1.INVENTORY_ITEM_ID AS inventory_item_id FROM INV.MTL_SYSTEM_ITEMS_B D17AL1, INV.MTL_PARAMETERS D17AL2, APPS.MTL_ONHAND_TOTAL_V D17AL3, APPS.MTL_SECONDARY_INVENTORIES_FK_V D17AL4 WHERE ( D17AL1.ORGANIZATION_ID = D17AL3.ORGANIZATION_ID (+) AND  D17AL1.INVENTORY_ITEM_ID = D17AL3.INVENTORY_ITEM_ID (+) AND D17AL2.ORGANIZATION_ID=D17AL1.ORGANIZATION_ID AND D17AL3.ORGANIZATION_ID=D17AL4.ORGANIZATION_ID AND D17AL3.SUBINVENTORY_CODE=D17AL4.SECONDARY_INVENTORY_NAME)  AND ((D17AL2.ORGANIZATION_CODE='SPG' AND D17AL4.AVAILABILITY_TYPE=1)) GROUP BY D17AL2.ORGANIZATION_CODE, D17AL1.SEGMENT1, D17AL2.ORGANIZATION_ID, D17AL1.INVENTORY_ITEM_ID) AL18, (SELECT D19AL1.ORGANIZATION_CODE AS org, D19AL3.ASSIGNMENT_GROUP_NAME AS item_abc_assign1, D19AL4.ABC_CLASS_NAME AS item_abc_class, D19AL3.ORGANIZATION_ID AS organization_id, D19AL3.INVENTORY_ITEM_ID AS inventory_item_id FROM INV.MTL_PARAMETERS D19AL1, MRP.MRP_PARAMETERS D19AL2, APPS.MTL_ABC_ASSIGNMENTS_V D19AL3, APPS.MTL_ABC_CLASSES_ALL_V D19AL4 WHERE (D19AL1.ORGANIZATION_ID=D19AL2.ORGANIZATION_ID AND D19AL2.ORGANIZATION_ID=D19AL3.ORGANIZATION_ID AND D19AL2.DEFAULT_ABC_ASSIGNMENT_GROUP=D19AL3.ASSIGNMENT_GROUP_ID AND D19AL3.ORGANIZATION_ID=D19AL4.ORGANIZATION_ID AND D19AL3.ABC_CLASS_ID=D19AL4.ABC_CLASS_ID)  AND (D19AL1.ORGANIZATION_CODE='SPG')) AL20, (SELECT D20AL1.ORGANIZATION_CODE AS org, D20AL3.SEGMENT1 AS item, -1 * SUM ( D20AL4.TRANSACTION_QUANTITY ) AS total_usage, -5 * SUM ( nvl(D20AL4.TRANSACTION_QUANTITY,0) ) / 91 AS average_weekly_3, D20AL4.ORGANIZATION_ID AS organization_id, D20AL4.INVENTORY_ITEM_ID AS inventory_item_id FROM INV.MTL_PARAMETERS D20AL1, INV.MTL_TRANSACTION_TYPES D20AL2, INV.MTL_SYSTEM_ITEMS_B D20AL3, INV.MTL_MATERIAL_TRANSACTIONS D20AL4 WHERE (D20AL1.ORGANIZATION_ID=D20AL4.ORGANIZATION_ID AND D20AL4.ORGANIZATION_ID=D20AL3.ORGANIZATION_ID AND D20AL4.INVENTORY_ITEM_ID=D20AL3.INVENTORY_ITEM_ID AND D20AL4.TRANSACTION_TYPE_ID=D20AL2.TRANSACTION_TYPE_ID)  AND ((D20AL1.ORGANIZATION_CODE='SPG' AND D20AL2.TRANSACTION_TYPE_NAME IN ('Internal order issue', 'Logical Intercompany Sales Issue', 'Logical Sales Order Issue', 'Sales order issue', 'WIP Issue', 'WIP Negative Issue', 'WIP Negative Return', 'WIP Return') AND D20AL4.TRANSACTION_DATE > (SYSDATE - 91))) GROUP BY D20AL1.ORGANIZATION_CODE, D20AL3.SEGMENT1, D20AL4.ORGANIZATION_ID, D20AL4.INVENTORY_ITEM_ID) AL21 WHERE ( AL2.BUYER_ID = AL4.EMPLOYEE_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL8.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL8.ORGANIZATION_ID (+) AND  AL7.LOCATOR_ID = AL6.INVENTORY_LOCATION_ID (+) AND  AL7.ORGANIZATION_ID = AL6.ORGANIZATION_ID (+) AND  AL2.ORGANIZATION_ID = AL10.ORGANIZATION_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL10.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL13.ORGANIZATION_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL13.INVENTORY_ITEM_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL7.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL7.ORGANIZATION_ID (+) AND  AL5.INVENTORY_ITEM_ID = AL14.INVENTORY_ITEM_ID (+) AND  AL5.ORGANIZATION_ID = AL14.ORGANIZATION_ID (+) AND  AL5.SUBINVENTORY_NAME = AL14.SECONDARY_INVENTORY (+) AND  AL2.INVENTORY_ITEM_ID = AL15.INVENTORY_ITEM_ID (+) AND  AL2.ORGANIZATION_ID = AL15.ORGANIZATION_ID (+) AND  AL2.ORGANIZATION_ID = AL16.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL16.inventory_item_id (+) AND  AL16.sr_vendor_id = AL11.VENDOR_ID (+) AND  AL16.sr_vendor_site_id = AL12.VENDOR_SITE_ID (+) AND  AL2.INVENTORY_ITEM_ID = AL17.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL17.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL18.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL18.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL20.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL20.organization_id (+) AND  AL2.INVENTORY_ITEM_ID = AL21.inventory_item_id (+) AND  AL2.ORGANIZATION_ID = AL21.organization_id (+) AND AL3.ORGANIZATION_ID=AL2.ORGANIZATION_ID AND AL2.ITEM_TYPE=AL1.LOOKUP_CODE AND AL2.ORGANIZATION_ID=AL5.ORGANIZATION_ID AND AL2.INVENTORY_ITEM_ID=AL5.INVENTORY_ITEM_ID)  AND ((AL3.ORGANIZATION_CODE='SPG' AND AL5.SOURCE_TYPE IN (1, 2) AND AL1.LOOKUP_TYPE='ITEM_TYPE' AND AL1.LANGUAGE='US' AND AL8.DEFAULT_TYPE(+)=2 AND AL7.DEFAULT_TYPE(+)=2 AND AL5.KANBAN_PLAN_ID=-1 AND AL10.COST_TYPE(+)='Frozen' AND AL15.DATE_RUN > (SYSDATE - 6))) GROUP BY AL3.ORGANIZATION_CODE, AL2.SEGMENT1, AL2.DESCRIPTION, AL2.PRIMARY_UNIT_OF_MEASURE, AL1.MEANING, AL20.item_abc_assign1, AL20.item_abc_class, AL10.ITEM_COST, AL13.OPROD_TBU, AL13.OPROD_FAMILY, AL13.OPROD_LINE, AL13.OPROD_FORECAST_FIELD, AL2.PLANNER_CODE, AL4.FULL_NAME, AL11.VENDOR_NAME, AL12.VENDOR_SITE_CODE, AL5.MINIMUM_ORDER_QUANTITY, AL5.FIXED_LOT_MULTIPLIER, AL5.REPLENISHMENT_LEAD_TIME, AL2.POSTPROCESSING_LEAD_TIME, Decode (AL2.RECEIVING_ROUTING_ID,
//1,'Standard',
//2,'Inspection',
//3,'Direct')
//, AL8.SUBINVENTORY_CODE, AL7.SUBINVENTORY_CODE, AL6.CONCATENATED_SEGMENTS, AL14.MIN_MINMAX_QUANTITY, AL5.SAFETY_STOCK_DAYS, AL5.NUMBER_OF_CARDS, AL5.KANBAN_SIZE, ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) /
//( ( nvl(AL5.NUMBER_OF_CARDS,2) - 1 ) * 5 ), 1, nvl(AL18.total_nettable_qoh,0) / nvl(AL5.KANBAN_SIZE,0.001), nvl(AL5.NUMBER_OF_CARDS,1) - 1, AL21.average_weekly_3, ( nvl(AL15.WEEKLY_GROSS_REQS_WEEK_0,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_1,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_2,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_3,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_4,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_5,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_6,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_7,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_8,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_9,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_10,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_11,0) + 
//nvl(AL15.WEEKLY_GROSS_REQS_WEEK_12,0) ) / 13, trunc(( ( (  nvl(AL5.NUMBER_OF_CARDS,1) - 1 )  * nvl(AL5.KANBAN_SIZE,0.001) )  /  ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) ) * 5 ),0), AL18.total_nettable_qoh, trunc(nvl(AL18.total_nettable_qoh,0) / 
//( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 )         * nvl(AL5.KANBAN_SIZE,0.001) )  /  
//        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 ),0)
//, case when
//(
//(
//nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
//nvl(AL18.total_nettable_qoh,0) / 
//( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
//        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
//)
//< 0
//)
//then
//0
//else
//(
//nvl(AL5.REPLENISHMENT_LEAD_TIME,1)/5 - 
//nvl(AL18.total_nettable_qoh,0) / 
//( ( (  ( nvl(AL5.NUMBER_OF_CARDS,1) - 1 ) * nvl(AL5.KANBAN_SIZE,0.001) )  /  
//        ( nvl(AL5.REPLENISHMENT_LEAD_TIME,1) + nvl(AL5.SAFETY_STOCK_DAYS,1) )  )  * 5 )
//)
//end, '.', AL17.supply_type, AL17.supply_due_qty, AL17.supply_due_week ORDER BY  1,  38,  2
//
//";
//
//   $result = $this->findBySql($sql);
//   return !empty($result) ? count($result) : false;
//  }
 }

//end of supply_analysis class
?>